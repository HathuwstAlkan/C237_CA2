<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register - RP Bookstore</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Lora:wght@400;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Lora', serif;
            background-color: #f8f9fa;
        }
        .container {
            margin-top: 50px;
            max-width: 500px;
            background-color: #fff;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .form-label {
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2 class="mb-4 text-center">Register for RP Bookstore</h2>

        <% if (messages && messages.length > 0) { %>
            <div class="alert alert-success mt-3" role="alert">
                <% messages.forEach(function(message) { %>
                    <p class="mb-0"><%= message %></p>
                <% }); %>
            </div>
        <% } %>
        <% if (errors && errors.length > 0) { %>
            <div class="alert alert-danger mt-3" role="alert">
                <% errors.forEach(function(error) { %>
                    <p class="mb-0"><%= error %></p>
                <% }); %>
            </div>
        <% } %>

        <form id="registerForm" action="/register" method="POST">
            <div class="mb-3">
                <label for="username" class="form-label">Username:</label>
                <input type="text" class="form-control" id="username" name="username" value="<%= typeof formData !== 'undefined' ? formData.username : '' %>" required>
            </div>
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label>
                <input type="email" class="form-control" id="email" name="email" value="<%= typeof formData !== 'undefined' ? formData.email : '' %>" required>
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Password:</label>
                <input type="password" class="form-control" id="password" name="password" required>
                <div class="form-text">
                    Password must be at least 8 characters long, include at least one capital letter, and at least one special character.
                </div>
            </div>
            <div class="mb-3">
                <label for="first_name" class="form-label">First Name:</label>
                <input type="text" class="form-control" id="first_name" name="first_name" value="<%= typeof formData !== 'undefined' ? formData.first_name : '' %>" required>
            </div>
            <div class="mb-3">
                <label for="last_name" class="form-label">Last Name:</label>
                <input type="text" class="form-control" id="last_name" name="last_name" value="<%= typeof formData !== 'undefined' ? formData.last_name : '' %>" required>
            </div>
            <div class="mb-3">
                <label for="address" class="form-label">Address:</label>
                <input type="text" class="form-control" id="address" name="address" value="<%= typeof formData !== 'undefined' ? formData.address : '' %>" required>
            </div>
            <div class="mb-3">
                <label for="contact" class="form-label">Contact Number:</label>
                <input type="text" class="form-control" id="contact" name="contact" value="<%= typeof formData !== 'undefined' ? formData.contact : '' %>" required>
            </div>
            <button type="submit" class="btn btn-primary w-100">Register</button>
        </form>
        <p class="mt-3 text-center">Already have an account? <a href="/partials/login">Login here</a></p>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById('registerForm').addEventListener('submit', async function(event) {
            event.preventDefault(); // Prevent default form submission

            const form = event.target;
            const formData = new URLSearchParams(new FormData(form)).toString();

            try {
                const response = await fetch(form.action, {
                    method: form.method,
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    },
                    body: formData
                });

                const result = await response.json();

                // Clear previous messages
                const successDiv = document.querySelector('.alert-success');
                const errorDiv = document.querySelector('.alert-danger');
                if (successDiv) successDiv.remove();
                if (errorDiv) errorDiv.remove();

                if (result.success) {
                    // Display success message
                    const newSuccessDiv = document.createElement('div');
                    newSuccessDiv.className = 'alert alert-success mt-3';
                    newSuccessDiv.innerHTML = `<p class="mb-0">${result.message}</p>`;
                    form.insertAdjacentElement('beforebegin', newSuccessDiv);

                    setTimeout(() => {
                        window.location.href = result.redirectUrl;
                    }, 1500);
                } else {
                    // Display error messages
                    const newErrorDiv = document.createElement('div');
                    newErrorDiv.className = 'alert alert-danger mt-3';
                    result.errors.forEach(error => {
                        newErrorDiv.innerHTML += `<p class="mb-0">${error}</p>`;
                    });
                    form.insertAdjacentElement('beforebegin', newErrorDiv);

                    // Re-populate form fields if formData is returned
                    if (result.formData) {
                        for (const key in result.formData) {
                            const input = form.elements[key];
                            if (input && input.type !== 'password') {
                                input.value = result.formData[key];
                            }
                        }
                    }
                }
            } catch (error) {
                console.error('Network error:', error);
                const newErrorDiv = document.createElement('div');
                newErrorDiv.className = 'alert alert-danger mt-3';
                newErrorDiv.innerHTML = `<p class="mb-0">A network error occurred. Please try again.</p>`;
                form.insertAdjacentElement('beforebegin', newErrorDiv);
            }
        });
    </script>
</body>
</html>
